name: Scrape Restaurant Menus

on:
  schedule:
    # We want to run at 10:00 Prague and conditionally at 11:00.
    # Because GitHub cron is UTC and DST varies, schedule 08,09,10 UTC
    # and decide at runtime based on Europe/Prague local hour.
    - cron: '0 8,9,10 * * 1-5'
  workflow_dispatch: # Allow manual trigger
  push:
    branches:
      - master
    paths:
      - 'lib/scrapers/**'
      - '.github/workflows/scrape-menus.yml'

permissions:
  contents: write

jobs:
  scrape:
    concurrency:
      group: scrape-menus
      cancel-in-progress: false
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Determine Prague time
      id: time
      run: |
        echo "prague_hour=$(TZ=Europe/Prague date +%H)" >> $GITHUB_OUTPUT
        echo "prague_date=$(TZ=Europe/Prague date +%F)" >> $GITHUB_OUTPUT

    - name: Check completeness for today
      id: check
      env:
        DATE: ${{ steps.time.outputs.prague_date }}
      run: |
        python3 - <<'PY'
        import re, json, os
        from pathlib import Path
        gh_out = os.environ['GITHUB_OUTPUT']
        date = os.environ['DATE']
        file = Path(f'public/data/menus/{date}.json')
        txt = Path('lib/config/restaurants.ts').read_text(encoding='utf-8')
        ids = re.findall(r"id:\s*'([^']+)'", txt)
        if not file.exists():
            open(gh_out,'a').write(f"complete=false\nmissing={json.dumps(ids)}\n")
            raise SystemExit(0)
        data = json.loads(file.read_text(encoding='utf-8'))
        by_id = {m.get('restaurantId'): m for m in data}
        def has_real_items(m):
            items = (m or {}).get('items') or []
            return any((i.get('price') or 0) > 0 for i in items)
        missing = [rid for rid in ids if rid not in by_id or not has_real_items(by_id.get(rid))]
        open(gh_out,'a').write(f"complete={'true' if not missing else 'false'}\nmissing={json.dumps(missing)}\n")
        PY

    - name: Decide whether to run scrapers now
      id: decide
      env:
        EVENT_NAME: ${{ github.event_name }}
      run: |
        HOUR="${{ steps.time.outputs.prague_hour }}"
        COMPLETE="${{ steps.check.outputs.complete }}"
        SHOULD_RUN=false
        if [ "$EVENT_NAME" = "workflow_dispatch" ]; then
          SHOULD_RUN=true
        elif [ "$HOUR" = "10" ]; then
          SHOULD_RUN=true
        elif [ "$HOUR" = "11" ] && [ "$COMPLETE" != "true" ]; then
          SHOULD_RUN=true
        fi
        echo "should_run=$SHOULD_RUN" >> $GITHUB_OUTPUT

    - name: Set up Node.js
      if: steps.decide.outputs.should_run == 'true'
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      if: steps.decide.outputs.should_run == 'true'
      run: npm ci

    - name: Install Playwright browsers and deps
      if: steps.decide.outputs.should_run == 'true'
      run: npx playwright install --with-deps chromium

    - name: Run scrapers
      if: steps.decide.outputs.should_run == 'true'
      run: npm run scrape
      env:
        NODE_ENV: production

    - name: Check if menu data changed
      if: steps.decide.outputs.should_run == 'true'
      id: check_changes
      run: |
        if [[ -n $(git status --porcelain public/data/menus/) ]]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push if changed
      if: steps.decide.outputs.should_run == 'true' && steps.check_changes.outputs.changed == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add public/data/menus/
        git commit -m "üçΩÔ∏è Update restaurant menus [skip ci]

        Automated menu update from GitHub Actions
        Time: $(date +'%Y-%m-%d %H:%M:%S')"
        git push
